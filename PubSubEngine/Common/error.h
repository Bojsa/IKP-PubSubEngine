#ifndef ERROR_H
#define ERROR_H

// Success code
#define ERROR_NONE 0

// Connection errors (1-9)
#define ERROR_CONNECTION_FAILED 1
#define ERROR_CONNECTION_LOST 2
#define ERROR_SOCKET_ERROR 3
#define ERROR_TIMEOUT 4

// Message errors (10-19)
#define ERROR_INVALID_MESSAGE 10
#define ERROR_MESSAGE_TOO_LARGE 11
#define ERROR_INVALID_TOPIC 12
#define ERROR_TOPIC_TOO_LONG 13
#define ERROR_EMPTY_MESSAGE 14

// Publisher errors (20-29)
#define ERROR_PUBLISH_FAILED 20
#define ERROR_PUBLISHER_NOT_CONNECTED 21
#define ERROR_TOPIC_RESTRICTED 22
#define ERROR_INVALID__TOPIC_MESSAGE 23
#define ERROR_PUBLISHER_UNAUTHORIZED 24

// Subscriber errors (30-39)
#define ERROR_SUBSCRIBE_FAILED 30
#define ERROR_SUBSCRIBER_NOT_CONNECTED 31
#define ERROR_SUBSCRIPTION_LIMIT_REACHED 32
#define ERROR_ALREADY_SUBSCRIBED 33
#define ERROR_INVALID_SUBSCRIPTION 34

// Storage errors (40-49)
#define ERROR_STORAGE_FAILURE 40
#define ERROR_STORAGE_FULL 41
#define ERROR_FILE_ACCESS_DENIED 42
#define ERROR_DATABASE_ERROR 43
#define ERROR_STORAGE_CORRUPTED 44

// Thread errors (50-59)
#define ERROR_THREAD_CREATE_FAILED 50
#define ERROR_THREAD_JOIN_FAILED 51
#define ERROR_MUTEX_ERROR 52
#define ERROR_DEADLOCK_DETECTED 53

// Client errors (60-69)
#define ERROR_CLIENT_INIT_FAILED 60
#define ERROR_CLIENT_INVALID_STATE 61
#define ERROR_CLIENT_DISCONNECTED 62
#define ERROR_USERNAME_TAKEN 63
#define ERROR_INVALID_USERNAME 64

// Function to get the description of an error code
const char* GetErrorDescription(int errorCode);

#endif // ERROR_H
